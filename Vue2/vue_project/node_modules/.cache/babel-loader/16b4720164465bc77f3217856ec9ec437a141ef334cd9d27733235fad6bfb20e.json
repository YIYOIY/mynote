{"ast":null,"code":"// 引入Vue，调用use()时要用到\nimport Vue from 'vue';\n// 引入Vuex，创建Store对象\nimport Vuex from 'vuex';\n\n// 准备actions\nconst actions = {\n  // actions中存储着一个个的方法（处理业务逻辑），方法有两个参数，第一个参数为上下文对象，第二个参数为dispatch()传递的值。\n  // 上下文对象一般用context表示，该对象中拥有commit()方法、dispatch()方法、state对象等等。\n  increment: function (context, value) {\n    // 可以使用简写形式，直接写成一个函数\n    console.log(context);\n    console.log('actions中的increment方法被调用了');\n    // 调用commit()，通知mutations执行操作\n    context.commit('INCREMENT', value);\n  },\n  decrement(context, value) {\n    console.log('mutations中的decrement方法被调用了');\n    context.commit('DECREMENT', value);\n  },\n  incrementOdd(context, value) {\n    console.log('mutations中的incrementOdd方法被调用了');\n    // 奇数时才增加\n    if (context.state.sum % 2) {\n      commit('INCREMENT', value);\n    }\n  },\n  incrementWait(context, value) {\n    console.log('mutations中的incrementWait方法被调用了');\n    // 等待500毫秒后\n  }\n};\n// 准备mutations\nconst mutations = {\n  // mutations中也存储着一个个的方法（操作数据），方法也有两个参数，一个参数为state对象，第二个参数为dispatch()或commit()传递的数据。\n  // 一般mutations中的方法名(操作名)用大写，方便和actions对象中的方法名区分。\n  INCREMENT(state, value) {\n    console.log('mutations中的INCREMENT方法被调用了');\n    state.sum += value;\n  },\n  DECREMENT(state, value) {\n    console.log('mutations中的DECREMENT方法被调用了');\n    state.sum += value;\n  }\n};\n// 准备state\nconst state = {\n  sum: 0\n};\n\n// 使用Vuex\nVue.use(Vuex);\n\n// 创建Store对象\nexport default new Vuex.Store({\n  actions: actions,\n  // 键和值同名时可以触发对象的简写形式\n  mutations,\n  state\n});","map":{"version":3,"names":["Vue","Vuex","actions","increment","context","value","console","log","commit","decrement","incrementOdd","state","sum","incrementWait","mutations","INCREMENT","DECREMENT","use","Store"],"sources":["F:/VSCode/vue_project/src/store/index.js"],"sourcesContent":["// 引入Vue，调用use()时要用到\r\nimport Vue from 'vue'\r\n// 引入Vuex，创建Store对象\r\nimport Vuex from 'vuex'\r\n\r\n// 准备actions\r\nconst actions = {\r\n    // actions中存储着一个个的方法（处理业务逻辑），方法有两个参数，第一个参数为上下文对象，第二个参数为dispatch()传递的值。\r\n    // 上下文对象一般用context表示，该对象中拥有commit()方法、dispatch()方法、state对象等等。\r\n    increment: function (context,value) {   // 可以使用简写形式，直接写成一个函数\r\n        console.log(context)\r\n        console.log('actions中的increment方法被调用了')\r\n        // 调用commit()，通知mutations执行操作\r\n        context.commit('INCREMENT',value)  \r\n    },\r\n    decrement(context, value) {\r\n        console.log('mutations中的decrement方法被调用了')\r\n        context.commit('DECREMENT',value)\r\n    },\r\n    incrementOdd(context, value) {\r\n        console.log('mutations中的incrementOdd方法被调用了')\r\n        // 奇数时才增加\r\n        if (context.state.sum % 2) {\r\n            commit('INCREMENT',value)\r\n        }\r\n    },\r\n    incrementWait(context, value) {\r\n        console.log('mutations中的incrementWait方法被调用了')\r\n        // 等待500毫秒后\r\n    }\r\n}\r\n// 准备mutations\r\nconst mutations = {\r\n    // mutations中也存储着一个个的方法（操作数据），方法也有两个参数，一个参数为state对象，第二个参数为dispatch()或commit()传递的数据。\r\n    // 一般mutations中的方法名(操作名)用大写，方便和actions对象中的方法名区分。\r\n    INCREMENT(state, value) {\r\n        console.log('mutations中的INCREMENT方法被调用了')\r\n        state.sum += value\r\n    },\r\n    DECREMENT(state, value) {\r\n        console.log('mutations中的DECREMENT方法被调用了')\r\n        state.sum += value\r\n    },\r\n\r\n}\r\n// 准备state\r\nconst state = {\r\n    sum:0\r\n}\r\n\r\n// 使用Vuex\r\nVue.use(Vuex)\r\n\r\n// 创建Store对象\r\nexport default new Vuex.Store({\r\n    actions: actions, // 键和值同名时可以触发对象的简写形式\r\n    mutations,\r\n    state\r\n})"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA,MAAMC,OAAO,GAAG;EACZ;EACA;EACAC,SAAS,EAAE,SAAAA,CAAUC,OAAO,EAACC,KAAK,EAAE;IAAI;IACpCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpBE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC;IACAH,OAAO,CAACI,MAAM,CAAC,WAAW,EAACH,KAAK,CAAC;EACrC,CAAC;EACDI,SAASA,CAACL,OAAO,EAAEC,KAAK,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCH,OAAO,CAACI,MAAM,CAAC,WAAW,EAACH,KAAK,CAAC;EACrC,CAAC;EACDK,YAAYA,CAACN,OAAO,EAAEC,KAAK,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;IACA,IAAIH,OAAO,CAACO,KAAK,CAACC,GAAG,GAAG,CAAC,EAAE;MACvBJ,MAAM,CAAC,WAAW,EAACH,KAAK,CAAC;IAC7B;EACJ,CAAC;EACDQ,aAAaA,CAACT,OAAO,EAAEC,KAAK,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C;EACJ;AACJ,CAAC;AACD;AACA,MAAMO,SAAS,GAAG;EACd;EACA;EACAC,SAASA,CAACJ,KAAK,EAAEN,KAAK,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCI,KAAK,CAACC,GAAG,IAAIP,KAAK;EACtB,CAAC;EACDW,SAASA,CAACL,KAAK,EAAEN,KAAK,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCI,KAAK,CAACC,GAAG,IAAIP,KAAK;EACtB;AAEJ,CAAC;AACD;AACA,MAAMM,KAAK,GAAG;EACVC,GAAG,EAAC;AACR,CAAC;;AAED;AACAZ,GAAG,CAACiB,GAAG,CAAChB,IAAI,CAAC;;AAEb;AACA,eAAe,IAAIA,IAAI,CAACiB,KAAK,CAAC;EAC1BhB,OAAO,EAAEA,OAAO;EAAE;EAClBY,SAAS;EACTH;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}