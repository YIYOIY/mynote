{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport default {\n  name: 'Words',\n  data() {\n    return {\n      word: ''\n    };\n  },\n  // 这里不使用mapXxx方法生成计算属性和方法，通过手写来说明一些注意点\n  computed: {\n    wordsList() {\n      // 导入的模块中state配置项的数据，会成为模块对象的属性，而模块对象存储在store对象的state属性中。\n      // 所以要访问模块的数据需要通过this.$store.state.模块名.xxx\n      return this.$store.state.wordsAbout.wordsList;\n    },\n    sum() {\n      return this.$store.state.countAbout.sum;\n    },\n    firstWords() {\n      // 模块getters配置项的数据最终会在store对象的getters属性身上，数据是以键值对形式存储，键的形式：模块名/计算属性名\n      // getters属性值就是一个对象，获取该对象上的数据可以通过属性名的方式获取：对象['属性名']，因为\n      return this.$store.getters['wordsAbout/firstWordsName'];\n    }\n  },\n  methods: {\n    publish() {\n      const wordsObj = {\n        id: nanoid(),\n        content: this.word\n      };\n      this.$store.dispatch('wordsAbout/addWords', wordsObj);\n      this.word = '';\n    },\n    oneWords() {\n      this.$store.dispatch('wordsAbout/addWordsByAjax');\n    }\n  }\n};","map":{"version":3,"names":["nanoid","name","data","word","computed","wordsList","$store","state","wordsAbout","sum","countAbout","firstWords","getters","methods","publish","wordsObj","id","content","dispatch","oneWords"],"sources":["src/components/Words.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<h1>语录列表</h1>\r\n\t\t<h3 style=\"color:red\">Count组件求和为：{{sum}}</h3>\r\n\t\t<h4>第一句语录是：{{firstWords}}</h4>\r\n\t\t<input type=\"text\" placeholder=\"请输入文字\" v-model=\"word\">\r\n\t\t<button @click=\"publish\">发布</button>\r\n\t\t<button @click=\"oneWords\">每日一言</button>\r\n\t\t<ul>\r\n\t\t\t<li v-for=\"words in wordsList\" :key=\"words.id\">{{words.content}}</li>\r\n\t\t</ul>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {nanoid} from 'nanoid'\r\n\texport default {\r\n\t\tname:'Words',\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tword:''\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 这里不使用mapXxx方法生成计算属性和方法，通过手写来说明一些注意点\r\n\t\tcomputed:{\r\n\t\t\twordsList(){\r\n\t\t\t\t// 导入的模块中state配置项的数据，会成为模块对象的属性，而模块对象存储在store对象的state属性中。\r\n\t\t\t\t// 所以要访问模块的数据需要通过this.$store.state.模块名.xxx\r\n\t\t\t\treturn this.$store.state.wordsAbout.wordsList\r\n\t\t\t},\r\n\t\t\tsum(){\r\n\t\t\t\treturn this.$store.state.countAbout.sum\r\n\t\t\t},\r\n\t\t\tfirstWords(){\r\n\t\t\t\t// 模块getters配置项的数据最终会在store对象的getters属性身上，数据是以键值对形式存储，键的形式：模块名/计算属性名\r\n\t\t\t\t// getters属性值就是一个对象，获取该对象上的数据可以通过属性名的方式获取：对象['属性名']，因为\r\n\t\t\t\treturn this.$store.getters['wordsAbout/firstWordsName']\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tpublish(){\r\n\t\t\t\tconst wordsObj = {id:nanoid(),content:this.word}\r\n\t\t\t\tthis.$store.dispatch('wordsAbout/addWords',wordsObj)\r\n\t\t\t\tthis.word = ''\r\n\t\t\t},\r\n\t\t\toneWords(){\r\n\t\t\t\tthis.$store.dispatch('wordsAbout/addWordsByAjax')\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\r\n"],"mappings":"AAeA,SAAAA,MAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA;MACA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAC,UAAA,CAAAH,SAAA;IACA;IACAI,IAAA;MACA,YAAAH,MAAA,CAAAC,KAAA,CAAAG,UAAA,CAAAD,GAAA;IACA;IACAE,WAAA;MACA;MACA;MACA,YAAAL,MAAA,CAAAM,OAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,MAAAC,QAAA;QAAAC,EAAA,EAAAhB,MAAA;QAAAiB,OAAA,OAAAd;MAAA;MACA,KAAAG,MAAA,CAAAY,QAAA,wBAAAH,QAAA;MACA,KAAAZ,IAAA;IACA;IACAgB,SAAA;MACA,KAAAb,MAAA,CAAAY,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}