{"ast":null,"code":"//引入Vue\nimport Vue from 'vue';\n//引入App组件，它是所有组件的父组件\nimport App from './App.vue';\n//关闭vue的生产提示\nVue.config.productionTip = false;\n/*\n  全局事件总线：适用于任意组件之间的通信。\n\n  分析：① 首先需要一个“傀儡”作为信息的载体，这个“傀儡”是全部组件都能看见的，所以可以考虑将这个傀儡放在window或者Vue的原型或者VueComponent的原型上。\n      ② 其次这个傀儡还要能被操控，即拥有$on()、$emit()、$off()等方法，而这些方法在Vue的原型上，所以这个傀儡必须是vm或者vc。\n      ③ 然而不建议给window添加属性(window.xxx = new Vue())，所以考虑这个傀儡放在Vue或者VueComponent的原型上。\n      ④ 因为不同的vc是由不同的VueComponent创建出来的，如果将“傀儡”放在VueComponent原型上这样就会有很多个“傀儡”，但是Vue只有一个，\n        并且VueComponent的原型指向了Vue的原型，vc可以访问的到Vue的原型上的“傀儡”。因此傀儡放在Vue的原型上。\n      ⑤ 再说这个“傀儡”可以是vm或者vc，但是vc不容易获取：const Vc = Vue.extend({}); const vc = new Vc()。因此使用vm作为傀儡。\n      ⑥ 一般这个“傀儡”一般使用$bus作为变量名：Vue.prototype.$bus = new Vue()\n      ⑦ “傀儡”初始化需要一个合适的时期，因此将傀儡的初始化放在beforeCreate()方法中执行：beforeCreate(){ Vue.prototype.$bus = this}\n      ⑧ 最后这个“傀儡”就是所谓的全局事件总线。 \n    \n*/\n\n//const Vc = Vue.extend({})\n//Vue.prototype.$bus = new Vc()\n\nnew Vue({\n  render: h => h(App),\n  beforeCreate() {\n    Vue.prototype.$bus = this; // 注册全局事件总线\n  }\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","config","productionTip","render","h","beforeCreate","prototype","$bus","$mount"],"sources":["F:/VSCode/vue_project/src/main.js"],"sourcesContent":["//引入Vue\nimport Vue from 'vue' \n//引入App组件，它是所有组件的父组件\nimport App from './App.vue'\n//关闭vue的生产提示\nVue.config.productionTip = false\n/*\n  全局事件总线：适用于任意组件之间的通信。\n\n  分析：① 首先需要一个“傀儡”作为信息的载体，这个“傀儡”是全部组件都能看见的，所以可以考虑将这个傀儡放在window或者Vue的原型或者VueComponent的原型上。\n      ② 其次这个傀儡还要能被操控，即拥有$on()、$emit()、$off()等方法，而这些方法在Vue的原型上，所以这个傀儡必须是vm或者vc。\n      ③ 然而不建议给window添加属性(window.xxx = new Vue())，所以考虑这个傀儡放在Vue或者VueComponent的原型上。\n      ④ 因为不同的vc是由不同的VueComponent创建出来的，如果将“傀儡”放在VueComponent原型上这样就会有很多个“傀儡”，但是Vue只有一个，\n        并且VueComponent的原型指向了Vue的原型，vc可以访问的到Vue的原型上的“傀儡”。因此傀儡放在Vue的原型上。\n      ⑤ 再说这个“傀儡”可以是vm或者vc，但是vc不容易获取：const Vc = Vue.extend({}); const vc = new Vc()。因此使用vm作为傀儡。\n      ⑥ 一般这个“傀儡”一般使用$bus作为变量名：Vue.prototype.$bus = new Vue()\n      ⑦ “傀儡”初始化需要一个合适的时期，因此将傀儡的初始化放在beforeCreate()方法中执行：beforeCreate(){ Vue.prototype.$bus = this}\n      ⑧ 最后这个“傀儡”就是所谓的全局事件总线。 \n    \n*/\n\n//const Vc = Vue.extend({})\n//Vue.prototype.$bus = new Vc()\n\nnew Vue({\n  render: h => h(App),\n   beforeCreate() {\n    Vue.prototype.$bus = this // 注册全局事件总线\n  }\n}).$mount('#app')\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,GAAG,MAAM,WAAW;AAC3B;AACAD,GAAG,CAACE,MAAM,CAACC,aAAa,GAAG,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAIH,GAAG,CAAC;EACNI,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACJ,GAAG,CAAC;EAClBK,YAAYA,CAAA,EAAG;IACdN,GAAG,CAACO,SAAS,CAACC,IAAI,GAAG,IAAI,EAAC;EAC5B;AACF,CAAC,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}