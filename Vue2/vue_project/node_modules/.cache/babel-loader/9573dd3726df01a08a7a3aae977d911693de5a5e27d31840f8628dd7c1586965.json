{"ast":null,"code":"import Student from './components/Student';\nimport School from './components/School';\nexport default {\n  name: 'App',\n  components: {\n    School,\n    Student\n  },\n  data() {\n    return {\n      msg: '你好啊！',\n      studentName: ''\n    };\n  },\n  methods: {\n    getSchoolName(name) {\n      console.log('App收到了学校名：', name);\n    },\n    getStudentName(name, ...params) {\n      console.log('App收到了学生名：', name, params);\n      this.studentName = name;\n    },\n    m1() {\n      console.log('demo事件被触发了！');\n    },\n    show() {\n      alert(123);\n    }\n  },\n  mounted() {\n    this.$refs.student.$on('atguigu', this.getStudentName); //绑定自定义事件\n    // this.$refs.student.$once('atguigu',this.getStudentName) //绑定自定义事件（一次性）\n  }\n};","map":{"version":3,"names":["Student","School","name","components","data","msg","studentName","methods","getSchoolName","console","log","getStudentName","params","m1","show","alert","mounted","$refs","student","$on"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n\t<!-- \r\n\t\t之前学习了使用props实现父子组件之间的通信，下面学习自定义事件实现父子组件间的通信。\r\n\r\n\t\t自定义事件通常使用在组件上。\r\n\r\n\t\t使用场景：A是父组件，B是子组件，B要传数据给A，那么就要在A中给B绑定自定义事件。其中事件的回调在A中。\r\n\r\n\t\t绑定自定义事件方式：\r\n\t\t\t第一种方式：<Demo @myEvent=\"callback\"/>  或 <Demo v-on:myEvent=\"callback\"/>\r\n\r\n\t\t\t第二种方式：先使用ref标记组件标签：<Demo ref=\"demo\"/>\r\n\t\t\t\t\t   然后通过在mounted()函数中使用$on()方法绑定事件：\r\n\t\t\t\t\t   \tmounted(){\r\n   \t\t\t\t\t\t\tthis.$refs.demo.$on('myEvent',callback)\r\n\t\t\t\t\t\t}\r\n\t\t\t若想让自定义事件只触发一次，第一种方式可以使用once修饰符：@myEvent.once；第二种方式可以使用$once()方法。\r\n\r\n\r\n\t -->\r\n\r\n\r\n\r\n\t<div class=\"app\">\r\n\t\t<h1>{{msg}}，学生姓名是:{{studentName}}</h1>\r\n\r\n\t\t<!-- 通过父组件给子组件传递函数类型的props实现子组件给父组件传递数据 -->\r\n\t\t<School :getSchoolName=\"getSchoolName\"/>\r\n\r\n\t\t<!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第一种写法，使用@或v-on） -->\r\n\t\t<Student @myEvent=\"getStudentName\" @demo=\"\"/>\r\n\r\n\t\t<!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第二种写法，使用ref） -->\r\n\t\t<!-- <Student ref=\"student\" @click.native=\"show\"/> -->\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Student from './components/Student'\r\n\timport School from './components/School'\r\n\r\n\texport default {\r\n\t\tname:'App',\r\n\t\tcomponents:{School,Student},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tmsg:'你好啊！',\r\n\t\t\t\tstudentName:''\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetSchoolName(name){\r\n\t\t\t\tconsole.log('App收到了学校名：',name)\r\n\t\t\t},\r\n\t\t\tgetStudentName(name,...params){\r\n\t\t\t\tconsole.log('App收到了学生名：',name,params)\r\n\t\t\t\tthis.studentName = name\r\n\t\t\t},\r\n\t\t\tm1(){\r\n\t\t\t\tconsole.log('demo事件被触发了！')\r\n\t\t\t},\r\n\t\t\tshow(){\r\n\t\t\t\talert(123)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.$refs.student.$on('atguigu',this.getStudentName) //绑定自定义事件\r\n\t\t\t// this.$refs.student.$once('atguigu',this.getStudentName) //绑定自定义事件（一次性）\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.app{\r\n\t\tbackground-color: gray;\r\n\t\tpadding: 5px;\r\n\t}\r\n</style>\r\n"],"mappings":"AAsCA,OAAAA,OAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF,MAAA;IAAAD;EAAA;EACAI,KAAA;IACA;MACAC,GAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAN,IAAA;MACAO,OAAA,CAAAC,GAAA,eAAAR,IAAA;IACA;IACAS,eAAAT,IAAA,KAAAU,MAAA;MACAH,OAAA,CAAAC,GAAA,eAAAR,IAAA,EAAAU,MAAA;MACA,KAAAN,WAAA,GAAAJ,IAAA;IACA;IACAW,GAAA;MACAJ,OAAA,CAAAC,GAAA;IACA;IACAI,KAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,GAAA,iBAAAR,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}