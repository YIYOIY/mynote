{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport MyFooter from \"./components/MyFooter.vue\";\nimport MyHeader from \"./components/MyHeader.vue\";\nimport MyList from \"./components/MyList.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    MyHeader,\n    MyList,\n    MyFooter\n  },\n  data() {\n    return {\n      // 由于todoList(对象数组)是MyHeader组件和MyFooter组件都在使用，所以放在App中（状态提升）\n      todoList: [{\n        id: \"001\",\n        title: \"学习\",\n        done: true\n      }, {\n        id: \"002\",\n        title: \"音乐\",\n        done: true\n      }, {\n        id: \"003\",\n        title: \"游戏\",\n        done: false\n      }]\n    };\n  },\n  methods: {\n    // 添加一个todo\n    addTodo(todoObj) {\n      this.todoList.unshift(todoObj);\n    },\n    // 勾选和取消勾选\n    checkTodo(id) {\n      this.todoList.forEach(todo => {\n        if (todo.id === id) todo.done = !todo.done;\n      });\n    },\n    // 根据id删除todo\n    deleteTodo(id) {\n      this.todoList = this.todoList.filter(todo => todo.id !== id); // 使用过滤器，记得重新赋值\n    }\n  }\n};","map":{"version":3,"names":["MyFooter","MyHeader","MyList","name","components","data","todoList","id","title","done","methods","addTodo","todoObj","unshift","checkTodo","forEach","todo","deleteTodo","filter"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"todo-container\">\n      <div class=\"todo-wrap\">\n        <MyHeader :addTodo=\"addTodo\" />\n        <!-- checkTodo传给MyList，MyList再传给MyItem，deleteTodo亦是如此-->\n        <MyList :todoList=\"todoList\" :checkTodo=\"checkTodo\" :deleteTodo=\"\"/>\n        <MyFooter />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MyFooter from \"./components/MyFooter.vue\";\nimport MyHeader from \"./components/MyHeader.vue\";\nimport MyList from \"./components/MyList.vue\";\nexport default {\n  name: \"App\",\n  components: { MyHeader, MyList, MyFooter },\n  data() {\n    return {\n      // 由于todoList(对象数组)是MyHeader组件和MyFooter组件都在使用，所以放在App中（状态提升）\n      todoList: [\n        { id: \"001\", title: \"学习\", done: true },\n        { id: \"002\", title: \"音乐\", done: true },\n        { id: \"003\", title: \"游戏\", done: false },\n      ],\n    };\n  },\n  methods: {\n    // 添加一个todo\n    addTodo(todoObj) {\n      this.todoList.unshift(todoObj);\n    },\n    // 勾选和取消勾选\n    checkTodo(id) {\n      this.todoList.forEach((todo) => {\n        if (todo.id === id) todo.done = !todo.done;\n      });\n    },\n    // 根据id删除todo\n    deleteTodo(id) {\n      this.todoList = this.todoList.filter((todo) => todo.id !== id); // 使用过滤器，记得重新赋值\n    },\n  },\n};\n</script>\n\n<style>\n/*一般一些通用的样式就放在App组件的样式中*/\n/*base*/\nbody {\n  background: #fff;\n}\n.btn {\n  display: inline-block;\n  padding: 4px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),\n    0 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n}\n.btn-danger {\n  color: #fff;\n  background-color: #da4f49;\n  border: 1px solid #bd362f;\n}\n.btn-danger:hover {\n  color: #fff;\n  background-color: #bd362f;\n}\n.btn:focus {\n  outline: none;\n}\n.todo-container {\n  width: 600px;\n  margin: 0 auto;\n}\n.todo-container .todo-wrap {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";AAcA,OAAAA,QAAA;AACA,OAAAC,QAAA;AACA,OAAAC,MAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAH,QAAA;IAAAC,MAAA;IAAAF;EAAA;EACAK,KAAA;IACA;MACA;MACAC,QAAA,GACA;QAAAC,EAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAF,EAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAF,EAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACA;IACAC,QAAAC,OAAA;MACA,KAAAN,QAAA,CAAAO,OAAA,CAAAD,OAAA;IACA;IACA;IACAE,UAAAP,EAAA;MACA,KAAAD,QAAA,CAAAS,OAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAT,EAAA,KAAAA,EAAA,EAAAS,IAAA,CAAAP,IAAA,IAAAO,IAAA,CAAAP,IAAA;MACA;IACA;IACA;IACAQ,WAAAV,EAAA;MACA,KAAAD,QAAA,QAAAA,QAAA,CAAAY,MAAA,CAAAF,IAAA,IAAAA,IAAA,CAAAT,EAAA,KAAAA,EAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}