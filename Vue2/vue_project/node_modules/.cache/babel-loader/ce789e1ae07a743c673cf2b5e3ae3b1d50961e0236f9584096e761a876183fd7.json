{"ast":null,"code":"export default {\n  name: \"Home\",\n  // 每一次切换路由组件都会将被切换的组件实例销毁。\n  beforeDestroy() {\n    console.log(\"Home组件即将被销毁了\");\n  },\n  mounted() {\n    console.log(\"Home组件挂载完毕了\", this);\n    // 每个组件实例的$route属性的值不同，但是$router属性的值是同一个，因为只有一个路由器\n    window.homeRoute = this.$route;\n    window.homeRouter = this.$router;\n    // 将$router存储到window对象上，在控制台判断homeRouter === aboutRouter\n  }\n};","map":{"version":3,"names":["name","beforeDestroy","console","log","mounted","window","homeRoute","$route","homeRouter","$router"],"sources":["src/pages/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Home组件内容</h2>\r\n    <div>\r\n      <ul class=\"nav nav-tabs\">\r\n        <li>\r\n          <!-- 访问二级路由的组件，访问地址：一级路由path/二级路由path -->\r\n          <router-link\r\n            class=\"list-group-item\"\r\n            active-class=\"active\"\r\n            to=\"/home/news\"\r\n            >News</router-link\r\n          >\r\n        </li>\r\n        <li>\r\n          <router-link\r\n            class=\"list-group-item\"\r\n            active-class=\"active\"\r\n            to=\"/home/message\"\r\n            >Message</router-link\r\n          >\r\n        </li>\r\n      </ul>\r\n      <hr />\r\n      <!-- 前面了解过切换路由后被切换的路由组件就被销毁了，假如一个路由组件中填写了表单数据，但是切换后组件就被销毁了，\r\n                重新切换回来扁担数据也不见了，那么怎么才能让被切换的路由组件不被销毁？ \r\n                将router-view标签用keep-alive标签包裹起来，该标签有一个include属性，该属性用来指定路由组件不被销毁。\r\n                若不使用include属性，表述该router-view中出现过的所有路由组件都不会被销毁，而是将他们缓存下来了。\r\n                一般不需要全部缓存下来，而是将include使用数据绑定将值写成数组形式指定不需要被销毁的路由组件。 -->\r\n\r\n      <!-- <keep-alive include=\"\"><router-view></router-view></keep-alive> -->\r\n      <!-- 跳转路由后About和Home组件都不会被销毁 -->\r\n      <keep-alive><router-view></router-view></keep-alive>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Home\",\r\n  // 每一次切换路由组件都会将被切换的组件实例销毁。\r\n  beforeDestroy() {\r\n    console.log(\"Home组件即将被销毁了\");\r\n  },\r\n  mounted() {\r\n    console.log(\"Home组件挂载完毕了\", this);\r\n    // 每个组件实例的$route属性的值不同，但是$router属性的值是同一个，因为只有一个路由器\r\n    window.homeRoute = this.$route;\r\n    window.homeRouter = this.$router;\r\n    // 将$router存储到window对象上，在控制台判断homeRouter === aboutRouter\r\n  },\r\n};\r\n</script>"],"mappings":"AAsCA;EACAA,IAAA;EACA;EACAC,cAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,QAAA;IACAF,OAAA,CAAAC,GAAA;IACA;IACAE,MAAA,CAAAC,SAAA,QAAAC,MAAA;IACAF,MAAA,CAAAG,UAAA,QAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}