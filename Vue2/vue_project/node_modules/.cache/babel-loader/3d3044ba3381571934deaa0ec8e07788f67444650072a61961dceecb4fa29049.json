{"ast":null,"code":"// 该文件专门用于创建整个应用的路由器\nimport VueRouter from 'vue-router';\n//引入组件\nimport About from '../pages/About.vue';\nimport Home from '../pages/Home.vue';\nimport News from '../pages/News.vue';\nimport Message from '../pages/Message.vue';\nimport Detail from '../pages/Detail.vue';\n\n// 创建一个路由器\nconst router = new VueRouter({\n  // 路由配置项routes，值是一个数组，数组中的元素是一个个的路由配置对象\n  routes: [{\n    name: 'about',\n    path: '/about',\n    component: About,\n    // meta配置项，它的值是一个对象，我们自定义的一些属性就放在该配置项里面，比如权是否需要鉴权\n    meta: {\n      title: '关于'\n    }\n  }, {\n    name: 'home',\n    path: '/home',\n    component: Home,\n    children: [{\n      name: 'news',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: '新闻'\n      },\n      // 自定义一个isAuth属性，表示是否需要鉴权\n      // 设置独享路由守卫：beforeEnter() ，三个参数和beforeEach()一样\n      // 该方法在切换到该路由之前被调用。\n      beforeEnter: (to, from, next) => {\n        console.log('独享路由守卫', to, from);\n        if (to.meta.isAuth) {\n          //判断是否需要鉴权\n          if (localStorage.getItem('name') === 'hello') {\n            next();\n          } else {\n            alert('数据错误，无权限查看！');\n          }\n        } else {\n          next();\n        }\n      }\n    }, {\n      name: 'message',\n      path: 'message',\n      component: Message,\n      children: [{\n        name: 'detail',\n        path: 'detail',\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: '详情'\n        },\n        props($route) {\n          return {\n            // 可以获取query参数以props的形式传递\n            id: $route.query.id,\n            title: $route.query.title,\n            // 可以传自定义参数\n            a: 1,\n            b: 'hello'\n          };\n        }\n      }]\n    }]\n  }]\n});\n\n// 设置全局前置路由守卫\t--- 初始化时被调用、每次切换路由之前被调用\n// 该方法有三个参数，第一个参数表示要跳转的路由，第二个参数表示从哪个路由跳转，第三个参数为放行函数\n/* router.beforeEach((to, from, next) => {\r\n\tconsole.log('前置路由守卫',to,from)\r\n\tif (to.meta.isAuth) { //读取meta中的数据判断是否需要鉴权\r\n\t\t// 这里从浏览器本地存储中获取数据，若获取到数据不符合要求则无权查看\r\n\t\tif(localStorage.getItem('name')==='hello'){\r\n\t\t\tnext()\t// next()表示放行，可以查看\r\n\t\t}else{\r\n\t\t\talert('数据错误，无权限查看！')\r\n\t\t}\r\n\t}else{\r\n\t\tnext()\r\n\t}\r\n}) */\n\n// 设置全局后置路由守卫 --- 初始化的时候被调用、每次路由切换之后被调用\n// 该方法有三个参数，第一个参数表示要跳转的路由，第二个参数表示从哪个路由跳转\nrouter.afterEach((to, from) => {\n  console.log('后置路由守卫', to, from);\n  document.title = to.meta.title || '学习Vue'; // 将meta中自定义的title设置为页面的标题，若没有则默认“学习Vue”\n});\n\n// 暴露路由器\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","meta","title","children","isAuth","beforeEnter","to","from","next","console","log","localStorage","getItem","alert","props","$route","id","query","a","b","afterEach","document"],"sources":["F:/VSCode/vue_project/src/router/index.js"],"sourcesContent":["// 该文件专门用于创建整个应用的路由器\r\nimport VueRouter from 'vue-router'\r\n//引入组件\r\nimport About from '../pages/About.vue'\r\nimport Home from '../pages/Home.vue'\r\nimport News from '../pages/News.vue'\r\nimport Message from '../pages/Message.vue'\r\nimport Detail from '../pages/Detail.vue'\r\n\r\n// 创建一个路由器\r\nconst router =  new VueRouter({\r\n\t// 路由配置项routes，值是一个数组，数组中的元素是一个个的路由配置对象\r\n\troutes: [\r\n\t\t{\r\n\t\t\tname:'about',\r\n\t\t\tpath:'/about',\r\n\t\t\tcomponent: About,\r\n\t\t\t// meta配置项，它的值是一个对象，我们自定义的一些属性就放在该配置项里面，比如权是否需要鉴权\r\n\t\t\tmeta:{title:'关于'}\r\n\t\t\t\r\n\t\t},\r\n\t\t{\r\n\t\t\tname:'home',\r\n\t\t\tpath:'/home',\r\n\t\t\tcomponent: Home,\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname:'news',\r\n\t\t\t\t\tpath: 'news',\r\n\t\t\t\t\tcomponent: News,\r\n\t\t\t\t\tmeta: { isAuth: true, title: '新闻' },\t// 自定义一个isAuth属性，表示是否需要鉴权\r\n\t\t\t\t\t// 设置独享路由守卫：beforeEnter() ，三个参数和beforeEach()一样\r\n\t\t\t\t\t// 该方法在切换到该路由之前被调用。\r\n\t\t\t\t\tbeforeEnter: (to, from, next) => {\r\n\t\t\t\t\t\tconsole.log('独享路由守卫',to,from)\r\n\t\t\t\t\t\tif(to.meta.isAuth){ //判断是否需要鉴权\r\n\t\t\t\t\t\t\tif(localStorage.getItem('name')==='hello'){\r\n\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\talert('数据错误，无权限查看！')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname:'message',\r\n\t\t\t\t\tpath: 'message',\r\n\t\t\t\t\tcomponent: Message,\r\n\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'detail',\t\r\n\t\t\t\t\t\t\tpath: 'detail',\t\r\n\t\t\t\t\t\t\tcomponent: Detail,\r\n\t\t\t\t\t\t\tmeta:{isAuth:true,title:'详情'},\r\n\t\t\t\t\t\t\tprops($route){\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t// 可以获取query参数以props的形式传递\r\n\t\t\t\t\t\t\t\t\tid:$route.query.id,\r\n\t\t\t\t\t\t\t\t\ttitle: $route.query.title,\r\n\t\t\t\t\t\t\t\t\t// 可以传自定义参数\r\n\t\t\t\t\t\t\t\t\ta:1,\r\n\t\t\t\t\t\t\t\t\tb:'hello'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n})\r\n\r\n// 设置全局前置路由守卫\t--- 初始化时被调用、每次切换路由之前被调用\r\n// 该方法有三个参数，第一个参数表示要跳转的路由，第二个参数表示从哪个路由跳转，第三个参数为放行函数\r\n/* router.beforeEach((to, from, next) => {\r\n\tconsole.log('前置路由守卫',to,from)\r\n\tif (to.meta.isAuth) { //读取meta中的数据判断是否需要鉴权\r\n\t\t// 这里从浏览器本地存储中获取数据，若获取到数据不符合要求则无权查看\r\n\t\tif(localStorage.getItem('name')==='hello'){\r\n\t\t\tnext()\t// next()表示放行，可以查看\r\n\t\t}else{\r\n\t\t\talert('数据错误，无权限查看！')\r\n\t\t}\r\n\t}else{\r\n\t\tnext()\r\n\t}\r\n}) */\r\n\r\n// 设置全局后置路由守卫 --- 初始化的时候被调用、每次路由切换之后被调用\r\n// 该方法有三个参数，第一个参数表示要跳转的路由，第二个参数表示从哪个路由跳转\r\nrouter.afterEach((to,from)=>{\r\n\tconsole.log('后置路由守卫',to,from)\r\n\tdocument.title = to.meta.title || '学习Vue'\t// 将meta中自定义的title设置为页面的标题，若没有则默认“学习Vue”\r\n})\r\n\r\n\r\n// 暴露路由器\r\nexport default router"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,MAAMC,MAAM,GAAI,IAAIN,SAAS,CAAC;EAC7B;EACAO,MAAM,EAAE,CACP;IACCC,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAET,KAAK;IAChB;IACAU,IAAI,EAAC;MAACC,KAAK,EAAC;IAAI;EAEjB,CAAC,EACD;IACCJ,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,OAAO;IACZC,SAAS,EAAER,IAAI;IACfW,QAAQ,EAAE,CACT;MACCL,IAAI,EAAC,MAAM;MACXC,IAAI,EAAE,MAAM;MACZC,SAAS,EAAEP,IAAI;MACfQ,IAAI,EAAE;QAAEG,MAAM,EAAE,IAAI;QAAEF,KAAK,EAAE;MAAK,CAAC;MAAE;MACrC;MACA;MACAG,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;QAChCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,EAAE,EAACC,IAAI,CAAC;QAC7B,IAAGD,EAAE,CAACL,IAAI,CAACG,MAAM,EAAC;UAAE;UACnB,IAAGO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAG,OAAO,EAAC;YACzCJ,IAAI,EAAE;UACP,CAAC,MAAI;YACJK,KAAK,CAAC,aAAa,CAAC;UACrB;QACD,CAAC,MAAI;UACJL,IAAI,EAAE;QACP;MACD;IACD,CAAC,EACD;MACCV,IAAI,EAAC,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,SAAS,EAAEN,OAAO;MAClBS,QAAQ,EAAE,CACT;QACCL,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE,QAAQ;QACdC,SAAS,EAAEL,MAAM;QACjBM,IAAI,EAAC;UAACG,MAAM,EAAC,IAAI;UAACF,KAAK,EAAC;QAAI,CAAC;QAC7BY,KAAKA,CAACC,MAAM,EAAC;UACZ,OAAO;YACN;YACAC,EAAE,EAACD,MAAM,CAACE,KAAK,CAACD,EAAE;YAClBd,KAAK,EAAEa,MAAM,CAACE,KAAK,CAACf,KAAK;YACzB;YACAgB,CAAC,EAAC,CAAC;YACHC,CAAC,EAAC;UACH,CAAC;QACF;MACD,CAAC;IAGH,CAAC;EAEH,CAAC;AAEH,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAvB,MAAM,CAACwB,SAAS,CAAC,CAACd,EAAE,EAACC,IAAI,KAAG;EAC3BE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,EAAE,EAACC,IAAI,CAAC;EAC7Bc,QAAQ,CAACnB,KAAK,GAAGI,EAAE,CAACL,IAAI,CAACC,KAAK,IAAI,OAAO,EAAC;AAC3C,CAAC,CAAC;;AAGF;AACA,eAAeN,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}