{"ast":null,"code":"import Category from './components/Category';\nexport default {\n  name: 'App',\n  components: {\n    Category\n  }\n};","map":{"version":3,"names":["Category","name","components"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n\t<!-- \r\n\t\t作用域插槽：在<slot>标签上传递数据（之前是父组件给子组件传递props，现在是子组件的<slot>标签给插槽的使用者传递props），\r\n\t\t\t\t  然后在组件标签体中给template标签添加一个scope属性接收数据，获取数据时需要通过scope属性.xxx来获取数据。\r\n\t\t\t\t  注意必须使用scope属性必须在template标签中使用，否则无法获取到插槽传过来的数据。\r\n\r\n\t\t使用场景：数据在子组件中，通过插槽转递数据给父组件，可以对数据展示不同的效果\r\n\r\n\t -->\r\n\r\n\t<div class=\"container\">\r\n\r\n\t\t<Category title=\"游戏\">\r\n\t\t\t<!-- 添加一个scope属性接收插槽传递的数据，数据存储在myData中，需要通过myData.xxx获取数据 -->\r\n\t\t\t<template scope=\"myData\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li v-for=\"(g,index) in myData.games\" :key=\"index\">{{g}}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</template>\r\n\t\t</Category>\r\n\r\n\t\t<Category title=\"游戏\">\r\n\t\t\t<!-- 这里使用了对象解构方式获取数据 -->\r\n\t\t\t<template scope=\"{games}\">\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li style=\"color:red\" v-for=\"(g,index) in games\" :key=\"index\">{{g}}</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</template>\r\n\t\t</Category>\r\n\r\n\t\t<Category title=\"游戏\">\r\n\t\t\t<template slot-scope=\"{games}\">\r\n\t\t\t\t<h4 v-for=\"(g,index) in games\" :key=\"index\">{{g}}</h4>\r\n\t\t\t</template>\r\n\t\t</Category>\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport Category from './components/Category'\r\n\texport default {\r\n\t\tname:'App',\r\n\t\tcomponents:{Category},\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.container,.foot{\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t}\r\n\th4{\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n"],"mappings":"AAwCA,OAAAA,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}